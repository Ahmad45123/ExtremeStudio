<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TabPage1.Text" xml:space="preserve">
    <value>Teme i boje</value>
  </data>
  <data name="TabPage2.Text" xml:space="preserve">
    <value>Kompajler</value>
  </data>
  <data name="ResetLangBtn.Text" xml:space="preserve">
    <value>Resetiraj lokalizacijske postavke</value>
  </data>
  <data name="resetBtn.Text" xml:space="preserve">
    <value>Resetiraj na zadano</value>
  </data>
  <data name="importBtn.Text" xml:space="preserve">
    <value>Uvoz</value>
  </data>
  <data name="exportBtn.Text" xml:space="preserve">
    <value>Izvezi</value>
  </data>
  <data name="Button1.Text" xml:space="preserve">
    <value>Resetiraj na zadano</value>
  </data>
  <data name="customArgsText.ToolTip" xml:space="preserve">
    <value>Ako neki argumenti koji želite kompajlirati koji nisu iznad, napišite ih ovdje.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Label9.Size" type="System.Drawing.Size, System.Drawing">
    <value>154, 13</value>
  </data>
  <data name="Label9.Text" xml:space="preserve">
    <value>Dodatni prilagođeni argumenti: </value>
  </data>
  <data name="parenthesesCheck.Size" type="System.Drawing.Size, System.Drawing">
    <value>145, 17</value>
  </data>
  <data name="parenthesesCheck.Text" xml:space="preserve">
    <value>Funkcije trebaju zagrade.</value>
  </data>
  <data name="parenthesesCheck.ToolTip" xml:space="preserve">
    <value>Ako je označeno, parametri u funckiji moraju biti zatvoreni u zagradama.</value>
  </data>
  <data name="semiColonCheck.Size" type="System.Drawing.Size, System.Drawing">
    <value>149, 17</value>
  </data>
  <data name="semiColonCheck.Text" xml:space="preserve">
    <value>Linije moraju završavati s ;</value>
  </data>
  <data name="semiColonCheck.ToolTip" xml:space="preserve">
    <value>Ako je označeno, linije moraju završiti s ;</value>
  </data>
  <data name="skipLinesUpDown.Location" type="System.Drawing.Point, System.Drawing">
    <value>163, 195</value>
  </data>
  <data name="skipLinesUpDown.Size" type="System.Drawing.Size, System.Drawing">
    <value>188, 20</value>
  </data>
  <data name="skipLinesUpDown.ToolTip" xml:space="preserve">
    <value>Broj linija za preskočiti u ulaznoj datoteci prije pokretanja kompjalera; za primjer, preskočiti zaglavlje u izvornoj datoteci koja nije valjana pawn sintaksa.</value>
  </data>
  <data name="Label8.Size" type="System.Drawing.Size, System.Drawing">
    <value>149, 13</value>
  </data>
  <data name="Label8.Text" xml:space="preserve">
    <value>Broj linija koje ćete preskočiti: </value>
  </data>
  <data name="tabSizeUpDown.ToolTip" xml:space="preserve">
    <value>Tab size: Broj mjesta koji se dodajte pritiskom tipke tab.
Bez ove opcije, Pawn će sam detektirati veličinu.</value>
  </data>
  <data name="Label7.Size" type="System.Drawing.Size, System.Drawing">
    <value>53, 13</value>
  </data>
  <data name="Label7.Text" xml:space="preserve">
    <value>Tab size: </value>
  </data>
  <data name="optiLevelUpDown.ToolTip" xml:space="preserve">
    <value>Optimizacija razine: 0 = nema optimizacije, 1 = osnovne upute, 2 = jezgra i dodatne upute. Optimizacija razine 1 je kompatibilan sa JIT implementacije (JIT = "Just in Time" kompajler, visoko-performanski abstraktni stroj).</value>
  </data>
  <data name="Label5.Size" type="System.Drawing.Size, System.Drawing">
    <value>103, 13</value>
  </data>
  <data name="Label5.Text" xml:space="preserve">
    <value>Razina optimizacije: </value>
  </data>
  <data name="debugLevelUpDown.Location" type="System.Drawing.Point, System.Drawing">
    <value>92, 117</value>
  </data>
  <data name="debugLevelUpDown.Size" type="System.Drawing.Size, System.Drawing">
    <value>259, 20</value>
  </data>
  <data name="debugLevelUpDown.ToolTip" xml:space="preserve">
    <value>Debug razina: 0 = ništa, 1 = granica provjere i tvrdnje, 2 = pune simboličke informacije, 3 = pune simboličke informacije i optimizacija onemogućena (isto kao i kombinacija-d2 i - O0).</value>
  </data>
  <data name="Label4.Size" type="System.Drawing.Size, System.Drawing">
    <value>85, 13</value>
  </data>
  <data name="Label4.Text" xml:space="preserve">
    <value>Razina debuga: </value>
  </data>
  <data name="reportGenDirText.ToolTip" xml:space="preserve">
    <value>Izvješće: Omogući izradu izvješća i po izboru postaviti naziv datoteke na koju će biti napisan izlučene dokumentacije i izvještaja reference. Postaviti put za stvaranje izvješća u izlaznoj mapi.</value>
  </data>
  <data name="Label6.Size" type="System.Drawing.Size, System.Drawing">
    <value>105, 13</value>
  </data>
  <data name="Label6.Text" xml:space="preserve">
    <value>Generirajte izvješće: </value>
  </data>
  <data name="ouputDirText.Location" type="System.Drawing.Point, System.Drawing">
    <value>89, 62</value>
  </data>
  <data name="ouputDirText.Size" type="System.Drawing.Size, System.Drawing">
    <value>262, 20</value>
  </data>
  <data name="ouputDirText.ToolTip" xml:space="preserve">
    <value>Izlazna datoteka: Postavite ime i putanju za izlaznu binarnu datoteku.

Ostavite prazno za zadano.</value>
  </data>
  <data name="Label3.Size" type="System.Drawing.Size, System.Drawing">
    <value>75, 13</value>
  </data>
  <data name="Label3.Text" xml:space="preserve">
    <value>Izlazna mapa: </value>
  </data>
  <data name="includesDirText.Location" type="System.Drawing.Point, System.Drawing">
    <value>102, 36</value>
  </data>
  <data name="includesDirText.Size" type="System.Drawing.Size, System.Drawing">
    <value>249, 20</value>
  </data>
  <data name="includesDirText.ToolTip" xml:space="preserve">
    <value>Putanja biblioteke: Postavite putanju gdje kompajler može pronaći biblioteke.

Ostavite prazno za zadano.</value>
  </data>
  <data name="Label2.Size" type="System.Drawing.Size, System.Drawing">
    <value>88, 13</value>
  </data>
  <data name="Label2.Text" xml:space="preserve">
    <value>Mapa biblioteka: </value>
  </data>
  <data name="activeDirText.Location" type="System.Drawing.Point, System.Drawing">
    <value>92, 10</value>
  </data>
  <data name="activeDirText.Size" type="System.Drawing.Size, System.Drawing">
    <value>259, 20</value>
  </data>
  <data name="activeDirText.ToolTip" xml:space="preserve">
    <value>Mapa: "Aktivna" mapa, gdje bi kompajler trebao tražiti ulazne datoteke i pohranjivati izlazne.

Ostavite prazno za zadano.</value>
  </data>
  <data name="Label1.Size" type="System.Drawing.Size, System.Drawing">
    <value>78, 13</value>
  </data>
  <data name="Label1.Text" xml:space="preserve">
    <value>Aktivna mapa: </value>
  </data>
  <data name="nameColumn.HeaderText" xml:space="preserve">
    <value>Naziv</value>
  </data>
  <data name="valueColumn.HeaderText" xml:space="preserve">
    <value>Vrijednost</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Postavke [Projekt]</value>
  </data>
</root>