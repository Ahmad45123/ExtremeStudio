<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="resetBtn.Text" xml:space="preserve">
    <value>Restablecer predeterminado</value>
  </data>
  <data name="resetBtn.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="importBtn.Text" xml:space="preserve">
    <value>Importar</value>
  </data>
  <data name="importBtn.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="exportBtn.Text" xml:space="preserve">
    <value>Exportar</value>
  </data>
  <data name="exportBtn.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="colorsSettings.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="TabPage1.Text" xml:space="preserve">
    <value>Tema y Colores</value>
  </data>
  <data name="TabPage1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="Button1.Text" xml:space="preserve">
    <value>Restablecer por defecto</value>
  </data>
  <data name="Button1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="customArgsText.ToolTip" xml:space="preserve">
    <value>Si hay algunos args que desea compilar con que no son por encima, escríbalas aquí.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Label9.Size" type="System.Drawing.Size, System.Drawing">
    <value>128, 13</value>
  </data>
  <data name="Label9.Text" xml:space="preserve">
    <value>Args extra personalizado: </value>
  </data>
  <data name="Label9.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="parenthesesCheck.Size" type="System.Drawing.Size, System.Drawing">
    <value>178, 17</value>
  </data>
  <data name="parenthesesCheck.Text" xml:space="preserve">
    <value>Funciones necesitan paréntesis.</value>
  </data>
  <data name="parenthesesCheck.ToolTip" xml:space="preserve">
    <value>Si está marcada, parámetros en una función deben estar entre paréntesis.</value>
  </data>
  <data name="semiColonCheck.Size" type="System.Drawing.Size, System.Drawing">
    <value>239, 17</value>
  </data>
  <data name="semiColonCheck.Text" xml:space="preserve">
    <value>Las líneas deben terminar con punto y coma.</value>
  </data>
  <data name="semiColonCheck.ToolTip" xml:space="preserve">
    <value>Si está marcada, las líneas deben terminar con un punto y coma.</value>
  </data>
  <data name="skipLinesUpDown.Location" type="System.Drawing.Point, System.Drawing">
    <value>163, 195</value>
  </data>
  <data name="skipLinesUpDown.Size" type="System.Drawing.Size, System.Drawing">
    <value>188, 20</value>
  </data>
  <data name="skipLinesUpDown.ToolTip" xml:space="preserve">
    <value>Saltar cuenta: el número de líneas para saltar en el archivo de entrada antes de comenzar a compilar; 
por ejemplo, para omitir un "encabezado" en el archivo de fuente que no es una sintaxis válida de pawn.</value>
  </data>
  <data name="Label8.Size" type="System.Drawing.Size, System.Drawing">
    <value>149, 13</value>
  </data>
  <data name="Label8.Text" xml:space="preserve">
    <value>Número de líneas para saltar: </value>
  </data>
  <data name="Label8.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="tabSizeUpDown.Location" type="System.Drawing.Point, System.Drawing">
    <value>130, 169</value>
  </data>
  <data name="tabSizeUpDown.Size" type="System.Drawing.Size, System.Drawing">
    <value>221, 20</value>
  </data>
  <data name="tabSizeUpDown.ToolTip" xml:space="preserve">
    <value>Ficha Tamaño: el número de caracteres de espacio para un carácter de tabulación. Sin esta opción, el analizador de pawn detectará automáticamente la ficha.</value>
  </data>
  <data name="Label7.Size" type="System.Drawing.Size, System.Drawing">
    <value>119, 13</value>
  </data>
  <data name="Label7.Text" xml:space="preserve">
    <value>Tamaño de la pestaña: </value>
  </data>
  <data name="Label7.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="optiLevelUpDown.Location" type="System.Drawing.Point, System.Drawing">
    <value>117, 143</value>
  </data>
  <data name="optiLevelUpDown.Size" type="System.Drawing.Size, System.Drawing">
    <value>234, 20</value>
  </data>
  <data name="optiLevelUpDown.ToolTip" xml:space="preserve">
    <value>Nivel de optimización: 0 = no hay optimizaciones, 1 = base de instrucciones, 2 = base &amp; Instrucciones suplementarias. Nivel de optimización 1 es compatible con las implementaciones de JIT (JIT = (compilador) "Just In Time", una máquina abstracta de alto rendimiento).</value>
  </data>
  <data name="Label5.Size" type="System.Drawing.Size, System.Drawing">
    <value>113, 13</value>
  </data>
  <data name="Label5.Text" xml:space="preserve">
    <value>Nivel de optimización: </value>
  </data>
  <data name="Label5.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="debugLevelUpDown.Location" type="System.Drawing.Point, System.Drawing">
    <value>117, 117</value>
  </data>
  <data name="debugLevelUpDown.Size" type="System.Drawing.Size, System.Drawing">
    <value>234, 20</value>
  </data>
  <data name="debugLevelUpDown.ToolTip" xml:space="preserve">
    <value>Nivel de depuración: 0 = ninguna, 1 = límites de control y afirmaciones, 2 = información simbólica completa, 3 = información simbólica completa y deshabilitadas las optimizaciones (igual que la combinación-d2 y - O0).</value>
  </data>
  <data name="Label4.Size" type="System.Drawing.Size, System.Drawing">
    <value>108, 13</value>
  </data>
  <data name="Label4.Text" xml:space="preserve">
    <value>Nivel de depuración: </value>
  </data>
  <data name="Label4.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="reportGenDirText.Location" type="System.Drawing.Point, System.Drawing">
    <value>152, 91</value>
  </data>
  <data name="reportGenDirText.Size" type="System.Drawing.Size, System.Drawing">
    <value>199, 20</value>
  </data>
  <data name="reportGenDirText.ToolTip" xml:space="preserve">
    <value>Informe: permitir la creación del informe y establezca opcionalmente el ﬁlename que se escribirán en la documentación extraída y un informe de referencias cruzadas.  Establecer la ruta por defecto para crear informe en salida dir.</value>
  </data>
  <data name="reportGenCheck.Location" type="System.Drawing.Point, System.Drawing">
    <value>130, 94</value>
  </data>
  <data name="reportGenCheck.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="Label6.Size" type="System.Drawing.Size, System.Drawing">
    <value>125, 13</value>
  </data>
  <data name="Label6.Text" xml:space="preserve">
    <value>Generación de informes: </value>
  </data>
  <data name="Label6.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="ouputDirText.Location" type="System.Drawing.Point, System.Drawing">
    <value>117, 62</value>
  </data>
  <data name="ouputDirText.Size" type="System.Drawing.Size, System.Drawing">
    <value>234, 20</value>
  </data>
  <data name="ouputDirText.ToolTip" xml:space="preserve">
    <value>Archivo de salida: establecer el nombre y ruta del archivo de salida binaria. Establecer en null de forma predeterminada.</value>
  </data>
  <data name="Label3.Size" type="System.Drawing.Size, System.Drawing">
    <value>103, 13</value>
  </data>
  <data name="Label3.Text" xml:space="preserve">
    <value>Directorio de salida: </value>
  </data>
  <data name="Label3.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="includesDirText.Location" type="System.Drawing.Point, System.Drawing">
    <value>130, 36</value>
  </data>
  <data name="includesDirText.Size" type="System.Drawing.Size, System.Drawing">
    <value>221, 20</value>
  </data>
  <data name="includesDirText.ToolTip" xml:space="preserve">
    <value>Incluir ruta de acceso: establecer la ruta donde el compilador puede encontrar los archivos de inclusión. 
Establecer en null de forma predeterminada.</value>
  </data>
  <data name="Label2.Size" type="System.Drawing.Size, System.Drawing">
    <value>116, 13</value>
  </data>
  <data name="Label2.Text" xml:space="preserve">
    <value>Directorio de Includes: </value>
  </data>
  <data name="Label2.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="activeDirText.Location" type="System.Drawing.Point, System.Drawing">
    <value>104, 10</value>
  </data>
  <data name="activeDirText.Size" type="System.Drawing.Size, System.Drawing">
    <value>247, 20</value>
  </data>
  <data name="activeDirText.ToolTip" xml:space="preserve">
    <value>Directorio: el directorio "activo", donde el compilador debe buscar sus archivos de entrada y almacenar sus archivos de salida. Establecer en null de forma predeterminada.</value>
  </data>
  <data name="Label1.Size" type="System.Drawing.Size, System.Drawing">
    <value>90, 13</value>
  </data>
  <data name="Label1.Text" xml:space="preserve">
    <value>Directorio activo: </value>
  </data>
  <data name="Label1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="TabPage2.Text" xml:space="preserve">
    <value>Compilador</value>
  </data>
  <data name="TabPage2.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="nameColumn.HeaderText" xml:space="preserve">
    <value>Nombre</value>
  </data>
  <data name="valueColumn.HeaderText" xml:space="preserve">
    <value>Valor</value>
  </data>
  <data name="serverCfgGrid.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="serverCFGTabPage.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="TabControl1.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Configuración [Project]</value>
  </data>
  <data name="$this.ToolTip" xml:space="preserve">
    <value />
  </data>
</root>